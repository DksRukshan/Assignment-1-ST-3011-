#shows a Uniform distribution
#############################################################################################
ggplot(MobilePrices,aes(dual_sim))+geom_bar()
df_sim < data.frame(dual_s=c())
for(i in MobilePrices$dual_sim){
if(i==0){
df_sim$dual_s <-append(dual_sim$dual_s,"Unavailable")
}else{
df_sim$dual_s <-append(dual_sim$dual_s,"Available")
}
}
df_sim <- data.frame(dual_s=c())
for(i in MobilePrices$dual_sim){
if(i==0){
df_sim$dual_s <-append(dual_sim$dual_s,"Unavailable")
}else{
df_sim$dual_s <-append(dual_sim$dual_s,"Available")
}
}
df_sim <- data.frame(dual_s=c())
for(i in MobilePrices$dual_sim){
if(i==0){
df_sim$dual_s <-append(df_sim_sim$dual_s,"Unavailable")
}else{
df_sim$dual_s <-append(df_sim$dual_s,"Available")
}
}
df_sim <- data.frame(dual_s=c())
for(i in MobilePrices$dual_sim){
if(i==0){
df_sim$dual_s <-append(df_sim$dual_s,"Unavailable")
}else{
df_sim$dual_s <-append(df_sim$dual_s,"Available")
}
}
df_sim <- data.frame(dual_s=c())
remove(df_sim)
dual_s <- c()
for(i in MobilePrices$dual_sim){
if(i==0){
dual_s <-append(dual_s,"Unavailable")
}else{
dual_s <-append(dual_s,"Available")
}
}
df_sim <- data.frame(dual_s)
ggplot(df_sim,aes(dual_s))+geom_bar()
ggplot(df_sim,aes(dual_s))+geom_bar()+ggtitle("Bar chart Of Phone RAM")+xlab("Dual Sim Functionality")+ylab("Count")
ggplot(df_sim,aes(dual_s))+geom_bar()+ggtitle("Bar chart Of Dual Sim Functionality")+xlab("Dual Sim Functionality")+ylab("Count")
ggplot(df_sim,aes(dual_s))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Dual Sim Functionality")+xlab("Dual Sim Functionality")+ylab("Count")
four_g <- c()
for(i in MobilePrices$four_g){
if(i==0){
four_g <-append(four_g,"Unavailable")
}else{
four_g <-append(four_g,"Available")
}
}
df_fourG <- data.frame(four_g)
ggplot(df_fourG,aes(four_g))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of 4-G Functionality")+xlab("4-G Functionality")+ylab("Count")
#01. Bar chart.
touch_screen <- c()
for(i in MobilePrices$touch_screen){
if(i==0){
touch_screen <-append(touch_screen,"Unavailable")
}else{
touch_screen <-append(touch_screen,"Available")
}
}
df_touchscreen <- data.frame(touch_screen)
ggplot(df_touchscreen,aes(touch_screen))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Touchscreen Functionality")+xlab("Touchscreen Functionality")+ylab("Count")
sum(MobilePrices$touch_screen)
sum(MobilePrices$four_g)
sum(MobilePrices$dual_sim)
#Univariate Analysis for Price Range.
#01. Bar chart.
#Turn coding into low cost, medium cost, high cost and very high cost
price_rangeV <- c()
for(i in MobilePrices$price_range){
if(i==0){
price_rangeV <-append(price_rangeV,"Low Cost")
}if(i==1){
price_rangeV <-append(price_rangeV,"Medium Cost")
}if(i==2){
price_rangeV <-append(price_rangeV,"High Cost")
}if(i==3){
price_rangeV <-append(price_rangeV,"Very High Cost")
}
}
df_price_range <- data.frame(price_rangeV)
ggplot(df_price_range,aes(price_rangeV))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Price Range")+xlab("Price Range")+ylab("Count")
remove(price_rangeV)
remove(df_price_range)
#01. Bar chart.
#Turn coding into low cost, medium cost, high cost and very high cost
price_rangeV <- c()
for(i in MobilePrices$price_range){
if(i==0){
price_rangeV <-append(price_rangeV,"Low Cost")
}else if(i==1){
price_rangeV <-append(price_rangeV,"Medium Cost")
}else if(i==2){
price_rangeV <-append(price_rangeV,"High Cost")
}else if(i==3){
price_rangeV <-append(price_rangeV,"Very High Cost")
}
}
df_price_range <- data.frame(price_rangeV)
ggplot(df_price_range,aes(price_rangeV))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Price Range")+xlab("Price Range")+ylab("Count")
count(MobilePrices$price_range==0)
num <- 0
for(i in MobilePrices$price_range){}
num1 <- 0
num2 <- 0
num3 <- 0
for(i in MobilePrices$price_range){
if(i==0){
num = num+1
}else if(i==1){
num1 = num1+1
}else if(i==2){
num2=num2+1
}else if(i==3){
num3=num3+1
}
}
#Univariate Analysis for Front camera Availability Function.
#01. Bar chart.
#Turn coding into avilable and Unavaillable.
fornt_cam <- c()
for(i in MobilePrices$fc_availability){
if(i==0){
front_cam <-append(front_cam,"Unavailable")
}else{
front_cam <-append(front_cam,"Available")
}
}
df_front_cam <- data.frame(front_cam)
ggplot(df_front_cam,aes(front_cam))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Front Camera Functionality")+xlab("Front Camera Functionality")+ylab("Count")
#Univariate Analysis for Front camera Availability Function.
#01. Bar chart.
#Turn coding into avilable and Unavaillable.
front_cam <- c()
for(i in MobilePrices$fc_availability){
if(i==0){
front_cam <-append(front_cam,"Unavailable")
}else{
front_cam <-append(front_cam,"Available")
}
}
df_front_cam <- data.frame(front_cam)
ggplot(df_front_cam,aes(front_cam))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Front Camera Functionality")+xlab("Front Camera Functionality")+ylab("Count")
#Univariate Analysis for Primary camera Availability Function.
#01. Bar chart.
#Turn coding into avilable and Unavaillable.
primary_cam <- c()
for(i in MobilePrices$pc_availability){
if(i==0){
primary_cam <-append(primary_cam,"Unavailable")
}else{
primary_cam <-append(primary_cam,"Available")
}
}
df_primaryt_cam <- data.frame(primary_cam)
ggplot(df_primary_cam,aes(primary_cam))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Primary Camera Functionality")+xlab("Primary Camera Functionality")+ylab("Count")
df_primary_cam <- data.frame(primary_cam)
ggplot(df_primary_cam,aes(primary_cam))+geom_bar(color="black",fill="cyan3")+ggtitle("Bar chart Of Primary Camera Functionality")+xlab("Primary Camera Functionality")+ylab("Count")
ggplot(MobilePrices,aes(battery_power,price_range))+geom_boxplot(color="black",fill="cyan3")
df_bp <- data.frame(MobilePrices$battery_power,price_rangeV)
ggplot(df_bp,aes(battery_power,price_rangeV))+geom_boxplot(color="black",fill="cyan3")
View(df_bp)
remove(df_bp)
df_bp <- data.frame(battery_power=MobilePrices$battery_power,price_rangeV)
view(df_bp)
View(df_bp)
ggplot(df_bp,aes(battery_power,price_rangeV))+geom_boxplot(color="black",fill="cyan3")
ggplot(df_bp,aes(battery_power,price_rangeV))+geom_boxplot(color="black",fill="cyan3")++ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
ggplot(df_bp,aes(battery_power,price_rangeV))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
price_range
price_range <- factor(price_rangeV,order=TRUE,levels =c("Low Cost","Medium Cost","High Cost","Very High Cost"))
df_bp <- data.frame(battery_power=MobilePrices$battery_power,price_range)
ggplot(df_bp,aes(battery_power,price_range))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
ggplot(df_bp,aes(battery_power,price_range))+geom_violin(scale-"area",color="black",fill="cyan3")+ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
ggplot(df_bp,aes(battery_power,price_range))+geom_violin(scale="area",color="black",fill="cyan3")+ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
ggplot(df_bp,aes(battery_power,price_range))+geom_violin(scale="area",color="black",fill="cyan3")+ggtitle("Violin Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
ggplot(df_bp,aes(battery_power,price_range))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Primary Price Range Vs Battery Power")+xlab("Battery Power (in mAh)")+ylab("Cost")
#2) Violin Plot
df_fc <- data.frame(fc=MobilePrices$fc,price_range)
#1) Box Plot.
ggplot(df_fc,aes(fc,price_range))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
#2) Violin Plot
ggplot(df_fc,aes(fc,price_range))+geom_violin(scale="area",color="black",fill="cyan3")+ggtitle("Violin Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
###########################################################################################
save.image("~/BackUp/Assignment 1 (ST 3011)/.Rhistory.RData")
savehistory("~/BackUp/Assignment 1 (ST 3011)/.Rhistory")
#06.Price Range Vs Dual sim
#Creating Contingency Table.
ct_dualSim <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_dualSim$total = rowSums(ct_dualSim)
#########################################################################################
#07.Price Range Vs 4-G
#Creating Contingency Table.
ct_fourG <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_fourG$total = rowSums(ct_fourG)
#########################################################################################
#08.Price Range Vs Touchscreen
#Creating Contingency Table.
ct_touchscreen <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_touchscreen$total = rowSums(ct_touchscreen)
#########################################################################################
#09.Price Range Vs Front Camera Functionality
#Creating Contingency Table.
ct_fcFunction <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_fcFunction$total = rowSums(ct_fcFunction)
#########################################################################################
#10.Price Range Vs Primary Camera Functionality
#Creating Contingency Table.
ct_pcFunction <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_pcFunction$total = rowSums(ct_pcFunction)
#########################################################################################s
ct_dualSim <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_dualSim$total = rowSums(ct_dualSim)
#########################################################################################
library(dplyr)
ct_dualSim <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, dual_sim==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_dualSim$total = rowSums(ct_dualSim)
#########################################################################################
#########################################################################################
#07.Price Range Vs 4-G
#Creating Contingency Table.
ct_fourG <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, four_g==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_fourG$total = rowSums(ct_fourG)
#########################################################################################
#08.Price Range Vs Touchscreen
#Creating Contingency Table.
ct_touchscreen <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, touch_screen==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_touchscreen$total = rowSums(ct_touchscreen)
#########################################################################################
#09.Price Range Vs Front Camera Functionality
#Creating Contingency Table.
ct_fcFunction <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, fc_availability==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_fcFunction$total = rowSums(ct_fcFunction)
#########################################################################################
#10.Price Range Vs Primary Camera Functionality
#Creating Contingency Table.
ct_pcFunction <- data.frame(
available=c(
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==1))))$n[1]
),
unavailable=c(
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 0))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 1))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 2))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0 & price_range == 3))))$n[1],
(as.data.frame(count(filter(MobilePrices, pc_availability==0))))$n[1]
),
total=c(0,0,0,0,0),
row.names=c("Low Price","Medium Price","High Price","Very High Price","Total"))
ct_pcFunction$total = rowSums(ct_pcFunction)
#########################################################################################s
library(qwraps2)
qsummary(MobilePrices)
summary_table(MobilePrices)
View(ct_fcFunction)
write.csv(ct_dualSim,"Ct_dualsim.csv", row.names = TRUE)
write.csv(ct_fcFunction,"ct_fcFunction.csv", row.names = TRUE)
write.csv(ct_fourG,"Ct_fourG.csv", row.names = TRUE)
write.csv(ct_pcFunction,"Ct_pcFunction.csv", row.names = TRUE)
write.csv(ct_touchscreen,"Ct_touchscreen.csv", row.names = TRUE)
MobilePrices
############################################################################################
#Univariate Analysis for battery Power.
# 01. Histogram.
ggplot(data=MobilePrices,aes(battery_power))+geom_histogram(bins =50,fill ="cyan3",color="black")+ggtitle("Histogram Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
# 02. Area plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_area(stat="bin",color="black",fill = "cyan3")+ggtitle("Area Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
#03. Dot Plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_dotplot(binwidth =20,color="black",fill="cyan3")+ggtitle("Dot Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
#04. density plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_density(kernel="gaussian",color="cyan3")+ggtitle("Density Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Density")
#shows a Uniform distribution
############################################################################################
#Univariate Analysis for Phone Weight
#01. Histogram.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_histogram(bins =30,fill ="cyan3",color="black")+ggtitle("Histogram Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
# 02. Area plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_area(stat="bin",color="black",fill = "cyan3",bins=30)+ggtitle("Area Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
#03. Dot Plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_dotplot(binwidth =1.5,color="black",fill="cyan3")+ggtitle("Dot Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
#04. density plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_density(kernel="gaussian",color="cyan3")+ggtitle("Density Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Density")
#shows a Uniform distribution
#############################################################################################
library(ggplot2)
############################################################################################
#Univariate Analysis for battery Power.
# 01. Histogram.
ggplot(data=MobilePrices,aes(battery_power))+geom_histogram(bins =50,fill ="cyan3",color="black")+ggtitle("Histogram Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
# 02. Area plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_area(stat="bin",color="black",fill = "cyan3")+ggtitle("Area Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
#03. Dot Plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_dotplot(binwidth =20,color="black",fill="cyan3")+ggtitle("Dot Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Count")
#04. density plot.
ggplot(data=MobilePrices,aes(battery_power))+geom_density(kernel="gaussian",color="cyan3")+ggtitle("Density Plot Of Battery Capacity")+xlab("Battery Capacity (in mAh)")+ylab("Density")
#shows a Uniform distribution
############################################################################################
#Univariate Analysis for Phone Weight
#01. Histogram.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_histogram(bins =30,fill ="cyan3",color="black")+ggtitle("Histogram Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
# 02. Area plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_area(stat="bin",color="black",fill = "cyan3",bins=30)+ggtitle("Area Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
#03. Dot Plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_dotplot(binwidth =1.5,color="black",fill="cyan3")+ggtitle("Dot Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Count")
#04. density plot.
ggplot(data=MobilePrices,aes(mobile_wt))+geom_density(kernel="gaussian",color="cyan3")+ggtitle("Density Plot Of Weight Of The Phone")+xlab("Weight of the phone (in grams)")+ylab("Density")
#shows a Uniform distribution
#############################################################################################
library(dplyr)
#02. Price Range vs Front camera Megapixcel
#turn the price range into factor with order
price_range <- factor(price_rangeV,order=TRUE,levels =c("Low Cost","Medium Cost","High Cost","Very High Cost"))
#Create the data frame
df_fc <- data.frame(fc=MobilePrices$fc,price_range)
df_fc <- filter(df_fc, fc !=0) # you might need to load library(dplyr)
#1) Box Plot.
ggplot(df_fc,aes(fc,price_range))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
#2) Violin Plot
ggplot(df_fc,aes(fc,price_range))+geom_violin(scale="area",color="black",fill="cyan3")+ggtitle("Violin Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
###########################################################################################
library(ggplot2)
#02. Price Range vs Front camera Megapixcel
#turn the price range into factor with order
price_range <- factor(price_rangeV,order=TRUE,levels =c("Low Cost","Medium Cost","High Cost","Very High Cost"))
#Create the data frame
df_fc <- data.frame(fc=MobilePrices$fc,price_range)
df_fc <- filter(df_fc, fc !=0) # you might need to load library(dplyr)
#1) Box Plot.
ggplot(df_fc,aes(fc,price_range))+geom_boxplot(color="black",fill="cyan3")+ggtitle("Box Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
#2) Violin Plot
ggplot(df_fc,aes(fc,price_range))+geom_violin(scale="area",color="black",fill="cyan3")+ggtitle("Violin Plot Of Price Range Vs Front Camera quality")+xlab("Camera quality (in Megapixcel)")+ylab("Cost")
###########################################################################################
table(MobilePrices$price_range,MobilePrices$dual_sim)
ct01 <- table(MobilePrices$price_range,MobilePrices$dual_sim)
ct_df <- data.frame(ct01)
View(ct_df)
View(ct_df)
write.csv(ct01,"ct_df", row.names = TRUE)
prop.table(table(MobilePrices$price_range,MobilePrices$dual_sim))
